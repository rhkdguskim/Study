# https://www.acmicpc.net/problem/11000
# 1. 시작시간을 오름차순으로 정렬한다.
# 2. 순서대로 순회하면서 (시작시간, 종료시간)을 강이실에 추가하거나, 이어 붙힌다.( 단, 가장 종료시간이 작은 강의실에 먼저 배정해야한다. )
# 3. 순회하면서 강의실리스트에 종료시간이 자기자신 시작시간보다 작거나 같을경우 해당 강의실에 붙힐 수 있다.
# 4. 강의실에 붙힐 수 있다면, 붙히고, 종료시간을 업데이트 해준다.
# 5. 강의실에 붙힐 수 없다면, 강의실을 하나 만든다.


# 인덱스와 같거나 작은경우 ( t2와 t1이 같거나 작을경우 )
# 인덱스가 예외길이가 나올경우 s1이 모든 room t2에 대하여 큰경우 -> 가장 큰 t2에 업데이트한다.
import sys
from bisect import bisect_left

input = sys.stdin.readline
N = int(input())

course = []
for _ in range(N):
    s, t = map(int, input().split())
    course.append((s, t))
    
course.sort(key=lambda x:x[0])

room = []
ans = 0
for s1, t1 in course:
    flag = False
    idx = 0
    if room: # 방이 있다면 자기자신의 시작시간과 종료시간이 가장 작은 경우를 찾는다.
        idx = bisect_left(room, s1)
        if idx < len(room) and room[idx] == s1:
            flag = True
        
    if flag:
        room[idx] = t1
    else:
        ans += 1
        room.append(t1)
        
print(ans)